set modeline
set modelines=5
set showcmd
set showmatch
set ignorecase
set smartcase
set incsearch
set hlsearch
set clipboard=unnamed

set nowritebackup "needed for watch tasks

" Show numbers
set nu
set linebreak
set wrap
set wildmenu
set lazyredraw

" Show relative numbers
set rnu

" Tabbing and Spaces
set tabstop=8
set expandtab
set shiftwidth=4
set softtabstop=4
set autoindent
set smartindent

set backspace=indent,eol,start
set nostartofline
set visualbell
set confirm
set mouse=a
set background=dark
set t_Co=256
set laststatus=2

let mapleader=","
" NEEDS TO BE SET ACCORDING TO ENVIRONMENT VARIABLE
"let g:livepreview_previewer = 'atril'

filetype plugin indent on
syntax on
autocmd FileType vue syntax sync fromstart
autocmd BufNewFile,BufRead *.vue set ft=vue
autocmd FileType make set noexpandtab shiftwidth=8 softtabstop=0 
let g:vue_disable_pre_processors=1

" Editorconfig settings
let g:EditorConfig_exec_path='/sbin/editorconfig'

" NerdTree
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let NERDTreeAutoDeleteBuffer = 1
let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ 'Ignored'   : '☒',
    \ "Unknown"   : "?"
    \ }

" CtlP
let g:ctrlp_custom_ignore = '\v[\/](\.git|node_modules)$'

" LSP
set hidden
let g:LanguageClient_serverCommands = {
    \ 'javascript': ['javascript-typescript-stdio'],
    \ }
" if executable('javascript-typescript-stdio')
"     let g:LanguageClient_serverCommands['javascript'] = exepath('javascript-typescript-stdio')
" endif

" gutentags_plug & gutentags
"let g:gutentags_cache_dir = expand('~/.cache/tags')
"let g:gutentags_modules = ['ctags', 'gtags_cscope']
"let g:gutentags_project_root = ['.root','.git']
"let g:gutentags_ctags_exclude = [ '@.gitignore', 'lib', 'dist', 'package.json', 'package-lock.json' ]

" vim: set ft=vim:
